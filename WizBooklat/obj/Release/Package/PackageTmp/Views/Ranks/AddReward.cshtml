@model WizBooklat.Models.Reward

@{
    ViewBag.Title = "Rewards";

    WizBooklat.Models.Rank r = ViewBag.rank as WizBooklat.Models.Rank;

    int rankId = (r != null) ? r.RankId : 0;

    List<WizBooklat.Models.Rank> ranks = (List<WizBooklat.Models.Rank>)ViewBag.ranks;
}

<div class="row">
    <div class="col-md-8">
        <div class="topbar">
            <div class="topbar-content">
                <div class="topbar-left">
                    <h5>
                        @if (rankId == 0)
                        {
                            <a href="@Url.Action("Rewards")">@ViewBag.Title</a>
                        }
                        else
                        {
                            <a href="@Url.Action("Rewards", new { id = rankId })">@ViewBag.Title</a>
                        }

                        &emsp;/&emsp;Add Reward
                    </h5>
                </div>
                <div class="topbar-right">

                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <br />
        <div class="body-container">

            @using (Html.BeginForm("AddReward", "Ranks", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                if (rankId == 0)
                {
                    <div class="form-group">
                        <div class="col-md-12">
                            <label class="control-label">Rank</label>
                            <select name="RankId" class="form-control form-control-line-only">
                                @foreach (var item in ranks)
                                {
                                    <option value="@item.RankId">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <div class="col-md-12">
                            <label class="control-label">Rank</label>
                            <input value="@r.Name" class="form-control form-control-line-only" readonly />
                            <input type="hidden" name="RankId" value="@rankId" />
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-12">
                        <label class="control-label">Title</label>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control form-control-line-only" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        <label class="control-label">Image URL</label>
                        @Html.EditorFor(model => model.ImageLocation, new { htmlAttributes = new { @class = "form-control form-control-line-only" } })
                        @Html.ValidationMessageFor(model => model.ImageLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @min= DateTime.UtcNow.AddHours(8).Date, @class = "form-control form-control-line-only", @type = "date", @required = "true" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @min = DateTime.UtcNow.AddHours(8).Date, @class = "form-control form-control-line-only", @type = "date", @required = "true" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        <label class="control-label">Description</label>
                        <textarea class="form-control form-control-text-area" name="Description"></textarea>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        <br />
                        <button type="submit" class="btn btn-info btn-block">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>